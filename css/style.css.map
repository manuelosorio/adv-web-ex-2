{"version":3,"sources":["style.sass","variables/_typography.sass","_base.sass","style.css","_layout.sass","components/_index.sass","components/_button.sass","utils/_custom-properties.scss"],"names":[],"mappings":"AAAA;;;;;MAAA;AAMA,oEAAA;AAEA;;;;;;;;eAAA;ACRQ,8GAAA;ACCR,4DAAA;AACA;;;;;oBAAA;AAMA;EACE,sBAAA;ACiBF;ADhBE;EACE,mBAAA;ACkBJ;;ADhBA,2DAAA;AEbA,8DAAA;AACA;;;;;;;;;;;iDAAA;AAaA,6DAAA;ACdA,kEAAA;AACA;;;;;;;;;;;;;;4DAAA;ALDA;;;;;MAAA;AAMA,oEAAA;AAEA;;;;;;;;eAAA;AMNA,yBAAA;AAMA;EACE,wCAAA;EACA,+BAAA;EACA,oBAAA;EACA,mBAAA;EACA,uBAAA;EACA,2BAAA;EACA,iCAAA;EACA,kBAAA;EACA,eAAA;AHwEF;AGvEE;ECTA,2BAAA;EAAA,6BAAA;EDYE,YAAA;AHyEJ;AGxEI;ECbF,2BAAA;EAAA,6BAAA;AJyFF;AGnEE;EACE,YAAA;EACA,kBAAA;EACA,WAAA;EACA,aAAA;AH6EJ;;AG5EA,8CAAA;;AAGA,yBAAA;ADnBA,+DAAA","file":"style.css","sourcesContent":["/*!\r\n  *  Project: Exercise 2 SASS/JQUERY\r\n  *  Author: Manuel Osorio\r\n  *  Version: 1.0.0\r\n  *  Licensed under MIT Open Source\r\n  *\r\n/*----------------------  Table Of Contents ----------------------\r\n\r\n/**\r\n  1 [Utilities]\r\n      1.1 [Normalize]\r\n  2 [Base]\r\n  3 [Layout]\r\n  4 [Components]\r\n    4.1 [Button]\r\n    4.2 [Modal]\r\n  5 [States]\r\n\r\n\r\n\r\n@use 'variables'\r\n@use 'utils'\r\n@use 'base'\r\n@use 'layout'\r\n@use 'components'\r\n","@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,600;1,400;1,600&display=swap')\r\n\r\n$f-poppins: 'Poppins', sans-serif\r\n\r\n$f-weight-regular: 400\r\n$f-weight-bold: 600\r\n","@use \"utils/custom-properties\"\r\n/*----------------------  2 [Base]  ----------------------\r\n/**\r\n  Base syntax should not contain any classes, id or use attribute selectors of any kind.\r\n  Resets or basic styles for elements belong here\r\n\r\n  Example:\r\n    header { ... }\r\n*\r\n  box-sizing: border-box\r\n  &:before, &:after\r\n    box-sizing: inherit\r\n\r\n/*----------------------  End Base  ----------------------*/\r\n","/*!\n * *  Project: Exercise 2 SASS/JQUERY\n * *  Author: Manuel Osorio\n * *  Version: 1.0.0\n * *  Licensed under MIT Open Source\n * * */\n/*----------------------  Table Of Contents ---------------------- */\n/**\n * 1 [Utilities]\n *    1.1 [Normalize]\n * 2 [Base]\n * 3 [Layout]\n * 4 [Components]\n *  4.1 [Button]\n *  4.2 [Modal]\n * 5 [States] */\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,400;0,600;1,400;1,600&display=swap\");\n/*----------------------  2 [Base]  ---------------------- */\n/**\n * Base syntax should not contain any classes, id or use attribute selectors of any kind.\n * Resets or basic styles for elements belong here\n *\n * Example:\n *  header { ... } */\n* {\n  box-sizing: border-box;\n}\n*:before, *:after {\n  box-sizing: inherit;\n}\n\n/*----------------------  End Base  ----------------------*/\n/*----------------------  3 [Layout]  ---------------------- */\n/**\n * Layout Syntax Example:\n *\n * .l-container { ... }\n *\n * Sass Syntax:\n *\n * .l-\n *  &container\n *    ...\n * html code:\n * <section class=\"l-container\"> ... </section> */\n/*----------------------  End Layout  ----------------------*/\n/*----------------------  4 [Components]  ---------------------- */\n/**\n * Components code style naming conventions follows bem methodology\n *\n * .block__element--modifier { ... }\n *\n * sass written as:\n * .block\n *   ...\n *  &__element\n *     ...\n *    &--modifier\n *       ...\n *\n * html syntax:\n * <div class=\"block block__element--modifier\"> ... </div> */\n/*!\n * *  Project: Exercise 2 SASS/JQUERY\n * *  Author: Manuel Osorio\n * *  Version: 1.0.0\n * *  Licensed under MIT Open Source\n * * */\n/*----------------------  Table Of Contents ---------------------- */\n/**\n * 1 [Utilities]\n *    1.1 [Normalize]\n * 2 [Base]\n * 3 [Layout]\n * 4 [Components]\n *  4.1 [Button]\n *  4.2 [Modal]\n * 5 [States] */\n/* ---- 4.1 Button ---- */\n.button {\n  background-color: var(--button-bg-color);\n  color: var(--button-text-color);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5625rem 0.875rem;\n  transition: all ease-in-out 200ms;\n  border-radius: 5px;\n  cursor: pointer;\n}\n.button__primary {\n  --button-bg-color: #6638F0 ;\n  --button-text-color: #FFFFFF ;\n  border: none;\n}\n.button__primary:hover {\n  --button-bg-color: #FFFFFF ;\n  --button-text-color: #6638F0 ;\n}\n.button__secondary {\n  --button-text-color: #6638F0 ;\n  border: none;\n  border-radius: 5px;\n}\n.button__secondary:hover {\n  --button-text-color: #282828 ;\n}\n.button--close {\n  border: none;\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n}\n\n/* ensures that parent has position relative */\n:has(.button--close) {\n  position: relative;\n}\n\n/* ---- End Button ---- */\n/*----------------------  End Modules  ---------------------- */","/*----------------------  3 [Layout]  ----------------------\r\n/**\r\n  Layout Syntax Example:\r\n\r\n  .l-container { ... }\r\n\r\n  Sass Syntax:\r\n\r\n  .l-\r\n    &container\r\n      ...\r\n  html code:\r\n  <section class=\"l-container\"> ... </section>\r\n\r\n/*----------------------  End Layout  ----------------------*/\r\n","/*----------------------  4 [Components]  ----------------------\r\n/**\r\n  Components code style naming conventions follows bem methodology\r\n\r\n  .block__element--modifier { ... }\r\n\r\n  sass written as:\r\n  .block\r\n     ...\r\n    &__element\r\n       ...\r\n      &--modifier\r\n         ...\r\n\r\n  html syntax:\r\n  <div class=\"block block__element--modifier\"> ... </div>\r\n\r\n@forward \"button\"\r\n@forward \"modal\"\r\n\r\n/*----------------------  End Modules  ----------------------\r\n","@use \"src/assets/css/variables\"\r\n@use \"src/assets/css/utils\"\r\n/* ---- 4.1 Button ---- */\r\n\r\n+utils.init-property(\"button-bg-color\", variables.$c-white)\r\n+utils.init-property(\"button-text-color\", variables.$c-black)\r\n+utils.create-root()\r\n\r\n.button\r\n  background-color: var(--button-bg-color)\r\n  color: var(--button-text-color)\r\n  display: inline-flex\r\n  align-items: center\r\n  justify-content: center\r\n  padding: 0.5625rem 0.875rem\r\n  transition: all variables.$t-ease-in-out\r\n  border-radius: 5px\r\n  cursor: pointer\r\n  &__primary\r\n    +utils.custom-properties(\"button-bg-color\", variables.$c-primary)\r\n    +utils.custom-properties(\"button-text-color\", variables.$c-white)\r\n    border: none\r\n    &:hover\r\n      +utils.custom-properties(\"button-bg-color\", variables.$c-white)\r\n      +utils.custom-properties(\"button-text-color\", variables.$c-primary)\r\n  &__secondary\r\n    +utils.custom-properties(\"button-text-color\", variables.$c-primary)\r\n    border: none\r\n    border-radius: 5px\r\n    &:hover\r\n      +utils.custom-properties(\"button-text-color\", variables.$c-black)\r\n  &--close\r\n    border: none\r\n    position: absolute\r\n    top: 0.5rem\r\n    right: 0.5rem\r\n/* ensures that parent has position relative */\r\n:has(.button--close)\r\n  position: relative\r\n/* ---- End Button ---- */\r\n","@use \"sass:map\";\r\n\r\n$custom-properties: ();\r\n\r\n@mixin init-property($name, $value) {\r\n  $custom-properties: map.merge($custom-properties, ( $name: $value ));\r\n}\r\n\r\n@mixin custom-properties($name, $value) {\r\n  --#{$name}: #{$value}\r\n}\r\n\r\n@mixin create-root() {\r\n  :root {\r\n    @each $name, $value in $custom-properties {\r\n      @include custom-properties($name, $value);\r\n    }\r\n  }\r\n}\r\n"]}